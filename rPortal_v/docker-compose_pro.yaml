version: "3.2"
services:
  # Portal React アプリケーション
  potralpro_c:
    image: potralpro_c
    build:
      context: potral_c
      dockerfile: Dockerfile_pro
      args:
        - VITE_ROUTER_BASENAME=${PRO_ROUTER_BASENAME}
        - VITE_MOCK_ENABLED=${PRO_MOCK_ENABLED}
    expose:
      - 3000
    # restart: always
    environment:
      - TZ=${TZ}
      - UID=${UID}
      - GID=${GID}
      - VITE_ROUTER_BASENAME=${PRO_ROUTER_BASENAME}
      - VITE_MOCK_ENABLED=${PRO_MOCK_ENABLED}
    # command: yarn start
    stdin_open: true

  # Cypress テスト
  cypress_c:
    image: cypress_c
    build: cypress_c
    volumes:
      - ./cypress_c/E2Etest/test-src/:/E2Etest/test-src/:rw
      - ./cypress_c/E2Etest/results/:/E2Etest/results/:rw
    expose:
      - 8080
    # restart: always
    # 実行ユーザーを指定
    user: "${UID}:${GID}"
    environment:
      - TZ=${TZ}
      - CYPRESS_CACHE_FOLDER=~/.cache/Cypress
      # - DISPLAY=0
      #- UID=${UID}
      #- GID=${GID}
    # command: yarn start
    stdin_open: true

  # リバースプロキシ
  nginxproxy_c:
    image: nginxproxy_c
    build: nginxproxy_c
    ports:
      - 80:80
    # restart: always
    environment:
      TZ: ${TZ}

  # API/APIプロキシ
  apiproxy_c:
    image: apiproxy_c
    build: apiproxy_c
    volumes:
      - ./apiproxy_c/contents/:/usr/src/app/contents/
    ports:
      - 8080:8080
    # restart: always
    environment:
      TZ: ${TZ}
